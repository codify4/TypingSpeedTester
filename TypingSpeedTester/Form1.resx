<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABgAAAAoAAAALAAAACwAAAAsAAAALAAAACwAA
        AAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAAKAAAABgAA
        AAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAGBQEBkjIBAbR7AQG8ngEBvKEBAbyhAQG8oQEB
        vKEBAbyhAQG8oQEBvKEBAbyhAQG8oQEBvKEBAbyhAQG8oQEBvKEBAbyhAQG8oQEBvKEBAbyhAQG8oQEB
        vJ4BAbR7AQGSMgAABgUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMBAbFTAQHG2wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcbbAQGxUwAAAAMAAAAAAAAAAAAAAAACAv8AAQGsKgEBx9kBAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcfZAQGsKgIC/wAAAAAAAAAFAAIC/wABAcJyAQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcJyAgL/AAAABQAAADMAHR3/AAEB
        xpUBAcr/AQHK/wEByv8BAcr/AQHK/wAAyv8AAMr/AADK/wAAyv8AAMr/AADK/wAAyv8AAMr/AADK/wAA
        yv8AAMr/AADK/wAAyv8AAMr/AADK/wAAyv8BAcr/AQHK/wEByv8BAcr/AQHK/wEBxpUdHf8AAAAzAAAA
        PwAAAAAAAQHHmQEByv8BAcr/AQHK/wAAyv8KCsv/JCTM/yorzP8qK8z/KivM/yorzP8qK8z/KivM/yor
        zP8qK8z/KivM/yorzP8qK8z/KivM/yorzP8qK8z/JCTM/woKy/8AAMr/AQHK/wEByv8BAcr/AQHHmQAA
        AAAAAD8AAAA/AAAAAAABAceZAQHK/wEByv8AAMr/HB3M/4uO0v++w9X/w8jV/8PI1f/DyNX/w8jV/8PI
        1f/DyNX/w8jV/8PI1f/DyNX/w8jV/8PI1f/DyNX/w8jV/8PI1f++w9X/i47S/xwdzP8AAMr/AQHK/wEB
        yv8BAceZAAAAAAAAPwAAAD8AAAAAAAEBx5kBAcr/AQHK/wMDyv98f9H/0dbW/7vA1f+rr9T/q6/U/6uv
        1P+rr9T/q6/U/6uv1P+rr9T/q6/U/6uv1P+rr9T/q6/U/6uv1P+rr9T/q6/U/7vA1f/R1tb/fH/R/wMD
        yv8BAcr/AQHK/wEBx5kAAAAAAAA/AAAAPwAAAAAAAQHHmQEByv8AAMr/Dw/L/6es1P/Izdb/Q0TO/w8P
        y/8QEMv/Dw/L/w8Qy/8PEMv/DxDL/w8Qy/8PEMv/DxDL/w8Qy/8PEMv/Dw/L/xAQy/8PD8v/Q0TO/8jN
        1v+nrNT/Dw/L/wAAyv8BAcr/AQHHmQAAAAAAAD8AAAA/AAAAAAABAceZAQHK/wAAyv8REcv/q6/U/8PI
        1f8pKsz/AADK/xwdzP9rbdD/dXjR/3R30f90d9H/dHfR/3R30f90d9H/dHfR/3V40f9rbdD/HB3M/wAA
        yv8pKsz/w8jV/6uv1P8REcv/AADK/wEByv8BAceZAAAAAAAAPwAAAD8AAAAAAAEBx5kBAcr/AADK/xER
        y/+rr9T/w8jV/yorzP8AAMr/UlTP/9HW1v/T2Nb/09jW/9PY1v/T2Nb/09jW/9PY1v/T2Nb/09jW/9HW
        1v9SVM//AADK/yorzP/DyNX/q6/U/xERy/8AAMr/AQHK/wEBx5kAAAAAAAA/AAAAPwAAAAAAAQHHmQEB
        yv8AAMr/ERHL/6uv1P/DyNX/KivM/wAAyv8WF8v/WFrP/2Bj0P9hY9D/YWPQ/2Bi0P9gYtD/YWPQ/2Fj
        0P9gY9D/WFrP/xYXy/8AAMr/KivM/8PI1f+rr9T/ERHL/wAAyv8BAcr/AQHHmQAAAAAAAD8AAAA/AAAA
        AAABAceZAQHK/wAAyv8REcv/q6/U/8PI1f8qK8z/AADK/wAAyv8EBMr/ERLL/wMDyv8AAMr/DAzL/wwM
        y/8AAMr/AwPK/xESy/8EBMr/AADK/wAAyv8qK8z/w8jV/6uv1P8REcv/AADK/wEByv8BAceZAAAAAAAA
        PwAAAD8AAAAAAAEBx5kBAcr/AADK/xERy/+rr9T/w8jV/yorzP8AAMr/AADK/1BSz/+wtNT/PkDO/wwM
        y/+QlNL/kJTS/wwMy/8+QM7/sLTU/1BSz/8AAMr/AADK/yorzP/DyNX/q6/U/xERy/8AAMr/AQHK/wEB
        x5kAAAAAAAA/AAAAPwAAAAAAAQHHmQEByv8AAMr/ERHL/6uv1P/DyNX/KivM/wAAyv8AAMr/UFLP/7C0
        1P8+QM7/DAzL/5CU0v+QlNL/DAzL/z5Azv+wtNT/UFLP/wAAyv8AAMr/KivM/8PI1f+rr9T/ERHL/wAA
        yv8BAcr/AQHHmQAAAAAAAD8AAAA/AAAAAAABAceZAQHK/wAAyv8REcv/q6/U/8PI1f8qK8z/AADK/wAA
        yv8FBcr/FBXL/wMEyv8AAMr/Dg/L/w4Py/8AAMr/AwTK/xQVy/8FBcr/AADK/wAAyv8qK8z/w8jV/6uv
        1P8REcv/AADK/wEByv8BAceZAAAAAAAAPwAAAD8AAAAAAAEBx5kBAcr/AADK/xERy/+rr9T/w8jV/ykq
        zP8NDsv/UFLP/yYnzP8AAMr/Li/N/0xOzv8JCsv/CQrL/0xOzv8uL83/AADK/yUmzP9QUs//DQ7L/ykq
        zP/DyNX/q6/U/xERy/8AAMr/AQHK/wEBx5kAAAAAAAA/AAAAPwAAAAAAAQHHmQEByv8AAMr/ERHL/6uv
        1P/DyNX/JyjM/z0/zf/P1Nb/en3R/wQEyv+OkdL/yM3V/ywtzf8sLc3/yM3V/46S0v8EBMr/en3R/8/U
        1v89P83/JyjM/8PI1f+rr9T/ERHL/wAAyv8BAcr/AQHHmQAAAAAAAD8AAAA/AAAAAAABAceZAQHK/wAA
        yv8REcv/q6/U/8PI1f8oKcz/EhPL/2Nl0P8wMc3/AADK/zo8zf9eYND/DQ3L/w0Ny/9eYND/OzzN/wAA
        yv8wMc3/Y2XQ/xITy/8oKcz/w8jV/6uv1P8REcv/AADK/wEByv8BAceZAAAAAAAAPwAAAD8AAAAAAAEB
        x5kBAcr/AADK/w8Py/+nrNT/yM3W/0NEzv8ODsv/Dg/L/w8Qy/8REcv/Dw/L/w4Py/8QEMv/EBDL/w4P
        y/8PD8v/ERHL/w8Qy/8OD8v/Dg7L/0NEzv/Izdb/p6zU/w8Py/8AAMr/AQHK/wEBx5kAAAAAAAA/AAAA
        PwAAAAAAAQHHmQEByv8BAcr/AwPK/3x/0f/R1tb/u8DV/6uv1P+rr9T/q6/U/6uv1P+rr9T/q6/U/6uv
        1P+rr9T/q6/U/6uv1P+rr9T/q6/U/6uv1P+rr9T/u8DV/9HW1v98f9H/AwPK/wEByv8BAcr/AQHHmQAA
        AAAAAD8AAAA/AAAAAAABAceZAQHK/wEByv8AAMr/HB3M/4uO0v++w9X/w8jV/8PI1f/DyNX/w8jV/8PI
        1f/DyNX/w8jV/8PI1f/DyNX/w8jV/8PI1f/DyNX/w8jV/8PI1f++w9X/i47S/xwdzP8AAMr/AQHK/wEB
        yv8BAceZAAAAAAAAPwAAAD8AAAAAAAEBx5gBAcr/AQHK/wEByv8AAMr/CgrL/yQkzP8qK8z/KivM/yor
        zP8qK8z/KivM/yorzP8qK8z/KivM/yorzP8qK8z/KivM/yorzP8qK8z/KivM/yQkzP8KCsv/AADK/wEB
        yv8BAcr/AQHK/wEBx5gAAAAAAAA/AAAAQAACAv8AAQHIlAEByv8BAcr/AQHK/wEByv8BAcr/AADK/wAA
        yv8AAMr/AADK/wAAyv8AAMr/AADK/wAAyv8AAMr/AADK/wAAyv8AAMr/AADK/wAAyv8AAMr/AADK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHIlAIC/wAAAEAAAAAQAAEB2wABAchuAQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAchuAQHbAAAAEAAAAAAAAQHJAAEBySQBAcrWAQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK1gEBySQBAckAAAAAAAAAAAABAccAAQHPAAEB
        ykkBAcrXAQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEB
        yv8BAcr/AQHK/wEByv8BAcr/AQHK/wEByv8BAcr/AQHK/wEBytcBAcpJAQHPAAEBxwAAAAAAAAAAAAAA
        AAABAckAAQHDAAEByiQBAcpuAQHKkwEBypYBAcqWAQHKlgEBypYBAcqWAQHKlgEBypYBAcqWAQHKlgEB
        ypYBAcqWAQHKlgEBypYBAcqWAQHKlgEBypYBAcqWAQHKlgEBypMBAcpuAQHKJAEBwwABAckAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAH+AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA+AAAAfwAAAP//////////8=
</value>
  </data>
</root>